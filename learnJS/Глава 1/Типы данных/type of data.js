let str = "Привет";
let str2 = 'Роман';
console.log( `${str} ${str2}`);


let n = 1/0;
console.log( `${n}` ); // Infinity представляет собой математическую бесконечность ∞. Это особое значение, которое больше любого числа.


let comparison = 5 > 1*8;
console.log( `${comparison}` ); // результат сравнения


let age = null;
console.log( `${age}` );  // null Это просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно».


let ages;
console.log( `${ages}` );  //Специальное значение undefined Оно означает, что «значение не было присвоено».


typeof undefined // "undefined"

typeof 0 // "number"

typeof 10n // "bigint"

typeof true // "boolean"

typeof "foo" // "string"

typeof Symbol("id") // "symbol"

//В JavaScript есть 8 основных типов данных.

//Семь из них называют «примитивными» типами данных:

//1)number для любых чисел: целочисленных или чисел с плавающей точкой; целочисленные значения ограничены диапазоном ±(253-1).
//2)bigint для целых чисел произвольной длины.
//3)string для строк. Строка может содержать ноль или больше символов, нет отдельного символьного типа.
//4)boolean для true/false.
//5)null для неизвестных значений – отдельный тип, имеющий одно значение null.
//6)undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined.
//7)symbol для уникальных идентификаторов.

//И один не является «примитивным» и стоит особняком:
//1)object для более сложных структур данных.

//Оператор typeof позволяет нам увидеть, какой тип данных сохранён в переменной.
//Имеет две формы: typeof x или typeof(x).
//Возвращает строку с именем типа. Например, "string".
//Для null возвращается "object" – это ошибка в языке, на самом деле это не объект.